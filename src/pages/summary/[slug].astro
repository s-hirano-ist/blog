---
import Footer from "@components/Footer.astro";
import Header from "@components/Header.astro";
import Main from "@components/Main.astro";
import PostSidebar from "@components/PostSidebar.astro";
import Layout from "@layouts/Layout.astro";
import slugify from "@utils/slugify";
import { type CollectionEntry, getCollection } from "astro:content";

export type Props = {
  post: CollectionEntry<"summary">;
};

const { post } = Astro.props;

const { heading, description } = post.data;

const { Content } = await post.render();

const ogUrl = new URL(`${heading}.png`, Astro.url.origin).href;

export async function getStaticPaths() {
  const posts = await getCollection("summary", ({ data }) => !data.draft);

  const postResult = posts.map(post => ({
    params: { slug: slugify(post.data) },
    props: { post },
  }));

  return postResult;
}
---

<Layout title={heading} description={description} ogImage={ogUrl}>
  <Header />
  <Main pageTitle={heading}>
    <article
      id="article"
      role="article"
      class="prose mx-auto flex max-w-5xl flex-row">
      <div
        id="post-side-nav"
        class="fixed left-0 z-10 h-full w-0 overflow-y-auto overflow-x-hidden rounded-lg bg-skin-gray pt-8 duration-500">
        <span class="close-sidebar-button absolute right-0 top-0 m-4 text-2xl">
          <svg xmlns="http://www.w3.org/2000/svg" class="scale-100">
            <path
              d="m16.192 6.344-4.243 4.242-4.242-4.242-1.414 1.414L10.535 12l-4.242 4.242 1.414 1.414 4.242-4.242 4.243 4.242 1.414-1.414L13.364 12l4.242-4.242z"
            ></path>
          </svg>
        </span>
        <div class="pr-8">
          <PostSidebar post={post.body} />
        </div>
      </div>
      <div id="post-main-contents">
        <Content />
      </div>
    </article>
  </Main>
  <Footer />
</Layout>
<script>
  const SIDEBAR_WIDTH = "320px";
  const SLIDE_MAIN_CONTENTS = false;

  function openNav() {
    // set the width of the opened navigation bar
    const postSideNav = document.getElementById("post-side-nav");
    if (!postSideNav) throw new Error("post-side-nav not found");
    postSideNav.style.width = SIDEBAR_WIDTH;
    if (SLIDE_MAIN_CONTENTS) {
      const postMainContents = document.getElementById("post-main-contents");
      if (!postMainContents) throw new Error("post-main-contents not found");
      postMainContents.style.marginLeft = SIDEBAR_WIDTH;
    }
    localStorage.setItem("sidebarOpen", "true");
  }
  function closeNav() {
    // set the width of the closed navigation bar
    const postSideNav = document.getElementById("post-side-nav");
    if (!postSideNav) throw new Error("post-side-nav not found");
    postSideNav.style.width = "0";

    if (SLIDE_MAIN_CONTENTS) {
      const postMainContents = document.getElementById("post-main-contents");
      if (!postMainContents) throw new Error("post-main-contents not found");
      postMainContents.style.marginLeft = "0";
    }
    localStorage.setItem("sidebarOpen", "false");
  }

  const closeWithClickOutSide = (e: any) => {
    if (e.target.id === "sidebar-button") return;

    // if outside of menu
    if (e.target === e.currentTarget) {
      if (localStorage.getItem("sidebarOpen") === "true") closeNav();
      else openNav();
    } else {
      if (localStorage.getItem("sidebarOpen") === "true") closeNav();
    }
  };

  localStorage.setItem("sidebarOpen", "false");

  const mainClickArea = document.querySelector("div.main-click-area");
  mainClickArea?.addEventListener("click", e => {
    closeWithClickOutSide(e);
  });

  const openButton = document.querySelector("h1.open-sidebar-button");
  openButton?.addEventListener("click", () => {
    openNav();
  });

  const closeButton = document.querySelector("span.close-sidebar-button");
  closeButton?.addEventListener("click", () => {
    closeNav();
  });
</script>
